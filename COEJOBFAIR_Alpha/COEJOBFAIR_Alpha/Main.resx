<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////ABWV4gDXbTsAXBuwAKuM0wBSnTwAbsyfAPTBowCH2vkAYmzhADzJ/AD0nmsAqseJAN3n
        0wCl28EAeEO8AEBM3ABKvoYA9IlHAHmoQQAXvfsAX6AYANLs9wCco+kA24VbABGf/wAuqvQA3tTrAFUz
        sQDEYDIA9OTbAOWymQDb7eUAIaX/APb29gCEy/oAUsaQACDH/wDJaToANq39AB6c5gDY2vIA7oJDAFO+
        hwAXxf8A9I1OAGCaHQBLw4wA1Gg2AFYwuAAYof8AUS2wAEVR3QBVmTcAYqIeAB7B/ADw4NcAYCCxABuY
        4gDGZjYA84VDAPCFSABQwYsA0ef3ABzF/wAYwf4AG778AMViNgBgnhwAJab/AE/EjgDXajcAxmg8AFMw
        sgBTw44A9ItKAENO3QBTmToAYaEbAPOGRgAUoP8AHqT/AMZpOQBQv4cAU8GKAPGERQDyh0kA1Ws5AMZm
        OQAaw/4AXh2wAFEwsABTmzgAVZc6AB2/+wDWbj0AYZ8eAE7DjABRwo0AUcCJABnG/wAdx/8A84lJAB7F
        /gDvhEYA9IxMANdsOQDFYzQAVZo6ABm+/AAWof8A8IJDAPCHSQAjpv8AF5XiABua4gBBTt0AUzCwAPSG
        RAAZxP8A8YZHANVpNwDYbjwAYKIaAE3EjQBQxY8AUb6GABCe/wAaxf8AG8b/APSHRQAZwv4A9IhGABKe
        /wDxhUQAHMT+APOHRwAfxv8A9IpJAPOISAAYvvsA8YVGABeg/wD0iUoA7oNEAO+FRwDXazgA1Wo4ANZs
        OgBdHLAAX6EZABaV4QBeHrEAYaIcAF8fsQBhoBwAYqMdAGGeHQBATd0AQk3dAERP3QBUmjkATMSMAEvC
        iwBMw4sAUcWQAFDDjQBQwowAUsONAFLBiQBSwIoAUr2GABjF/wAYxP8AGcX/APSGQwAaxv8AF8H+APOE
        QwAYwv4A84VEABGe/wD0h0YAG8X/APSIRwAZw/4A84dGABzG/wASn/8A9IlIAPGFRQAdxv8A74JDABOg
        /wD0iUkAG8P+AB7H/wD0ikoAFJ//APOISQAfx/8A8odIAB3E/gDvhEUAFaD/APSLSwDxhkgAFqD/APSM
        TQAXof8A9I1NABy/+wDVaDYA1mo3AB+k/wDWazgA12s5ACCl/wDWazkAIqX/ANVqOQDWbDkAJKb/ANds
        OgDYbTsA1248AMVjNQAVluIAX6AZABaV4gBgoRoAYaIbABqY4gBhoRwAYJ0cAGCaHABioh0AQEzdAEFM
        3ABBTd0AQk7dAENP3QBEUN0ARVDdAFMxsgBNw4wATsSNAE/FjgBOxI4AT8SNAE7DjQBRxY8AUMSPAFLF
        kABRwYkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApaMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD2o6OjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGJ9fX19AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+/f39/d9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD7+fn5+ff3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPr4+Pj4+fn5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAp35+fn74+Pj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/qEd+
        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
        /w///wAA////H///AAD///8///8AAP///3///wAA////////AAD///////8AAP///////wAA
</value>
  </data>
</root>